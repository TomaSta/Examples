/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import TCP.TCPClientConnection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.Socket;

import javax.swing.JOptionPane;

/**
 * This class makes GUI for the application
 *
 * @author Thomas
 * @version 1.0
 */
public class MenuGui extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form MenuGui
     */
    public MenuGui() {
        initComponents();
    }

    /**
     * This variable is responsible for connecting to the server
     */
    static TCPClientConnection connection;

    /**
     * This method is called from within the constructor to initialize the form.
     * The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        toolBar = new javax.swing.JToolBar();
        newGameButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        quitMenu = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        toolBar.setRollover(true);

        newGameButton.setText("New Game");
        newGameButton.setFocusable(false);
        newGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newGameButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGameButtonMouseClicked(evt);
            }
        });
        toolBar.add(newGameButton);

        table.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {"Player 1", "X"},
                    {"Player 2", "O"}
                },
                new String[]{
                    "Name", "Sign"
                }
        ));
        jScrollPane1.setViewportView(table);

        tabbedPane.addTab("Info", jScrollPane1);

        jButton1.setText(" ");
        jButton1.setActionCommand("Move11");
        jButton1.addActionListener(this);

        jButton2.setText(" ");
        jButton2.setActionCommand("Move12");
        jButton2.addActionListener(this);

        jButton3.setText(" ");
        jButton3.setActionCommand("Move13");
        jButton3.addActionListener(this);

        jButton4.setText(" ");
        jButton4.setActionCommand("Move21");
        jButton4.addActionListener(this);

        jButton5.setText(" ");
        jButton5.setActionCommand("Move22");
        jButton5.addActionListener(this);

        jButton6.setText(" ");
        jButton6.setActionCommand("Move23");
        jButton6.addActionListener(this);

        jButton7.setText(" ");
        jButton7.setActionCommand("Move31");
        jButton7.addActionListener(this);

        jButton8.setText(" ");
        jButton8.setActionCommand("Move32");
        jButton8.addActionListener(this);

        jButton9.setText(" ");
        jButton9.setActionCommand("Move33");
        jButton9.addActionListener(this);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))
        );

        tabbedPane.addTab("Game", jPanel1);

        fileMenu.setText("File");

        quitMenu.setText("Quit");
        quitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitMenuMouseClicked(evt);
            }
        });
        fileMenu.add(quitMenu);

        menuBar.add(fileMenu);

        aboutMenu.setText("About...");

        aboutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMenuMouseClicked(evt);
            }
        });

        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                        )
                        .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPane))
        );

        pack();
    }// </editor-fold>                        

    private void quitMenuMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            connection.closeConnection();
            this.dispose();
        } catch (IOException ex) {
        }
    }

    private void newGameButtonMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            newGame();
            connection.newGame();
        } catch (IOException ex) {
        }
    }

    /**
     * Method used for creating new game
     */
    private void newGame() {
        jButton1.setText(" ");
        jButton2.setText(" ");
        jButton3.setText(" ");
        jButton4.setText(" ");
        jButton5.setText(" ");
        jButton6.setText(" ");
        jButton7.setText(" ");
        jButton8.setText(" ");
        jButton9.setText(" ");
    }

    private void updateBoard() {

    }

    private void aboutMenuMouseClicked(java.awt.event.MouseEvent evt) {
        JOptionPane.showMessageDialog(aboutMenu, "Circle and Cross Game \n Version: 1.0 \n Author: Toamsz Staśko", "Information", 1);        // TODO add your handling code here:
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        String ObjButtons[] = {"Yes", "No"};
        int promptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit application?", "Online Examination System", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
        if (promptResult == JOptionPane.YES_OPTION) {
            try {
                connection.closeConnection();
                System.exit(0);
            } catch (IOException ex) {
            }

        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton newGameButton;
    private javax.swing.JMenu quitMenu;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable table;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration                   

    @Override
    public void actionPerformed(ActionEvent e) {

        if ("Move11".equals(e.getActionCommand())) {
            if (" ".equals(jButton1.getText())) {
                try {
                    connection.sendPlayersMove(0, 0, connection.getWhoseRound().charAt(0));
                    jButton1.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(0, 0, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton1, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton1, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move12".equals(e.getActionCommand())) {
            if (" ".equals(jButton2.getText())) {
                try {
                    connection.sendPlayersMove(0, 1, connection.getWhoseRound().charAt(0));
                    jButton2.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(0, 1, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton2, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton2, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move13".equals(e.getActionCommand())) {
            if (" ".equals(jButton3.getText())) {
                try {
                    connection.sendPlayersMove(0, 2, connection.getWhoseRound().charAt(0));
                    jButton3.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(0, 2, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton3, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton3, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move21".equals(e.getActionCommand())) {
            if (" ".equals(jButton4.getText())) {
                try {
                    connection.sendPlayersMove(1, 0, connection.getWhoseRound().charAt(0));
                    jButton4.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(1, 0, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton4, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton4, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move22".equals(e.getActionCommand())) {
            if (" ".equals(jButton5.getText())) {
                try {
                    connection.sendPlayersMove(1, 1, connection.getWhoseRound().charAt(0));
                    jButton5.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(1, 1, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton5, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton5, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move23".equals(e.getActionCommand())) {
            if (" ".equals(jButton6.getText())) {
                try {
                    connection.sendPlayersMove(1, 2, connection.getWhoseRound().charAt(0));
                    jButton6.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(1, 2, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton6, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton6, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move31".equals(e.getActionCommand())) {
            if (" ".equals(jButton7.getText())) {
                try {
                    connection.sendPlayersMove(2, 0, connection.getWhoseRound().charAt(0));
                    jButton7.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(2, 0, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton7, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton7, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move32".equals(e.getActionCommand())) {
            if (" ".equals(jButton8.getText())) {
                try {
                    connection.sendPlayersMove(2, 1, connection.getWhoseRound().charAt(0));
                    jButton8.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(2, 1, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton8, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton8, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

        if ("Move33".equals(e.getActionCommand())) {
            if (" ".equals(jButton9.getText())) {
                try {
                    connection.sendPlayersMove(2, 2, connection.getWhoseRound().charAt(0));
                    jButton9.setText(connection.getWhoseRound());
                    if (connection.checkIfWin(2, 2, connection.getWhoseRound().charAt(0)) == true) {
                        JOptionPane.showMessageDialog(jButton9, "GAME OVER \n THE WINNER IS " + connection.getWhoseRound().charAt(0), "Information", 1);
                        connection.newGame();
                        newGame();
                    } else if (connection.getCounterOfMoves() == 9) {
                        JOptionPane.showMessageDialog(jButton9, "GAME OVER \n DRAW!", "Information", 1);
                    }

                } catch (IOException ex) {
                }
            }
        }

    }

    /**
     * Method main of project
     *
     * @param args 
     */
    public static void main(String[] args) {

        boolean isAllGood = true;
        Socket clientSocket;
        connection = new TCPClientConnection();
        String adress;
        int port;

        adress = "localhost";
        port = 8888;

        try {
            clientSocket = new Socket(adress, port);
            connection = new TCPClientConnection(clientSocket);
        } catch (IOException e) {
            isAllGood = false;
        }
        if (isAllGood) {
            java.awt.EventQueue.invokeLater(() -> {
                new MenuGui().setVisible(true);
            });

        } else {
            JOptionPane.showMessageDialog(null, "Cannot connect to the server.");
        }

    }
}
